// <auto-generated />
using System;
using HR_Sys.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HR_Sys.Migrations
{
    [DbContext(typeof(HrDBContext))]
    partial class HrDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HR_Sys.Models.annualHoliday", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("addBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dateHoliday")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("int");

                    b.Property<int?>("editBy")
                        .HasColumnType("int");

                    b.Property<int>("idHoliday")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("lastEdit")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("addBy");

                    b.HasIndex("deletedBy");

                    b.HasIndex("editBy");

                    b.HasIndex("idHoliday");

                    b.ToTable("annualHoliday");

                    b.HasData(
                        new
                        {
                            id = 1,
                            addBy = 1,
                            dateHoliday = new DateTime(2021, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            idHoliday = 1,
                            isDeleted = false,
                            lastEdit = true
                        });
                });

            modelBuilder.Entity("HR_Sys.Models.Days", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("addBy")
                        .HasColumnType("int");

                    b.Property<string>("daysName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("int");

                    b.Property<int?>("editBy")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("lastEdit")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("addBy");

                    b.HasIndex("deletedBy");

                    b.HasIndex("editBy");

                    b.ToTable("Days");

                    b.HasData(
                        new
                        {
                            id = 1,
                            addBy = 1,
                            daysName = "السبت",
                            isDeleted = false,
                            lastEdit = true
                        },
                        new
                        {
                            id = 2,
                            addBy = 1,
                            daysName = "الاحد",
                            isDeleted = false,
                            lastEdit = true
                        },
                        new
                        {
                            id = 3,
                            addBy = 1,
                            daysName = "الاثنين",
                            isDeleted = false,
                            lastEdit = true
                        },
                        new
                        {
                            id = 4,
                            addBy = 1,
                            daysName = "الثلاثاء",
                            isDeleted = false,
                            lastEdit = true
                        },
                        new
                        {
                            id = 5,
                            addBy = 1,
                            daysName = "الاربعاء",
                            isDeleted = false,
                            lastEdit = true
                        },
                        new
                        {
                            id = 6,
                            addBy = 1,
                            daysName = "الخميس",
                            isDeleted = false,
                            lastEdit = true
                        },
                        new
                        {
                            id = 7,
                            addBy = 1,
                            daysName = "الجمعة",
                            isDeleted = false,
                            lastEdit = true
                        });
                });

            modelBuilder.Entity("HR_Sys.Models.Department", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("addBy")
                        .HasColumnType("int");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("int");

                    b.Property<string>("deptName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("editBy")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("lastEdit")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("addBy");

                    b.HasIndex("deletedBy");

                    b.HasIndex("editBy");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            id = 1,
                            addBy = 1,
                            deptName = "قسم العلاقات العامة",
                            isDeleted = false,
                            lastEdit = true
                        },
                        new
                        {
                            id = 2,
                            addBy = 1,
                            deptName = " قسم الموارد البشرية",
                            isDeleted = false,
                            lastEdit = true
                        },
                        new
                        {
                            id = 3,
                            addBy = 1,
                            deptName = "قسم التطوير",
                            isDeleted = false,
                            lastEdit = true
                        },
                        new
                        {
                            id = 4,
                            addBy = 1,
                            deptName = "قسم التسويق",
                            isDeleted = false,
                            lastEdit = true
                        },
                        new
                        {
                            id = 5,
                            addBy = 1,
                            deptName = "قسم المبيعات",
                            isDeleted = false,
                            lastEdit = true
                        });
                });

            modelBuilder.Entity("HR_Sys.Models.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("addBy")
                        .HasColumnType("int");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("int");

                    b.Property<int>("deptid")
                        .HasColumnType("int");

                    b.Property<int?>("editBy")
                        .HasColumnType("int");

                    b.Property<string>("empAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("empDateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("empGender")
                        .HasColumnType("bit");

                    b.Property<double?>("empGrossSalary")
                        .HasColumnType("float");

                    b.Property<DateTime>("empHireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("empName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("empNetSalary")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("empNonNetSalary")
                        .HasColumnType("float");

                    b.Property<string>("empSsn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("lastEdit")
                        .HasColumnType("bit");

                    b.Property<int>("nationalityId")
                        .HasColumnType("int");

                    b.Property<string>("phoneNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNum2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("requiredAttendanceTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("requiredDaysPerMonth")
                        .HasColumnType("int");

                    b.Property<float>("requiredDeductHours")
                        .HasColumnType("real");

                    b.Property<DateTime>("requiredDepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("requiredExtraHours")
                        .HasColumnType("real");

                    b.Property<decimal?>("requiredSalaryPerHour")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("addBy");

                    b.HasIndex("deletedBy");

                    b.HasIndex("deptid");

                    b.HasIndex("editBy");

                    b.HasIndex("nationalityId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            id = 1,
                            addBy = 1,
                            deptid = 1,
                            empAddress = "كوكب الارض",
                            empDateOfBirth = new DateTime(1997, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            empGender = true,
                            empGrossSalary = 700.40000000000009,
                            empHireDate = new DateTime(2008, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            empName = "test User",
                            empNetSalary = 600.20000000000005,
                            empNonNetSalary = 100.2,
                            empSsn = "29705251400191",
                            isDeleted = false,
                            lastEdit = true,
                            nationalityId = 1,
                            phoneNum = "01119959346",
                            phoneNum2 = "01554904905",
                            requiredAttendanceTime = new DateTime(2008, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            requiredDaysPerMonth = 24,
                            requiredDeductHours = 2f,
                            requiredDepartureTime = new DateTime(2008, 1, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            requiredExtraHours = 2f,
                            requiredSalaryPerHour = 50m
                        });
                });

            modelBuilder.Entity("HR_Sys.Models.EmployeeAttendance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("addBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("attendaceDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("attendanceTime")
                        .HasColumnType("datetime2");

                    b.Property<float?>("deductAmount")
                        .HasColumnType("real");

                    b.Property<float?>("deductHours")
                        .HasColumnType("real");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("departureTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("editBy")
                        .HasColumnType("int");

                    b.Property<int>("empId")
                        .HasColumnType("int");

                    b.Property<float?>("extraAmount")
                        .HasColumnType("real");

                    b.Property<float?>("extraHours")
                        .HasColumnType("real");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isOff")
                        .HasColumnType("bit");

                    b.Property<bool?>("lastEdit")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("addBy");

                    b.HasIndex("deletedBy");

                    b.HasIndex("editBy");

                    b.HasIndex("empId");

                    b.ToTable("EmployeesAttendance");
                });

            modelBuilder.Entity("HR_Sys.Models.EmpReport", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<float?>("GrossSalary")
                        .HasColumnType("real");

                    b.Property<float?>("NonNetSalary")
                        .HasColumnType("real");

                    b.Property<int?>("addBy")
                        .HasColumnType("int");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("int");

                    b.Property<int?>("editBy")
                        .HasColumnType("int");

                    b.Property<int>("empId")
                        .HasColumnType("int");

                    b.Property<int>("idmonth")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("lastEdit")
                        .HasColumnType("bit");

                    b.Property<float?>("netSalary")
                        .HasColumnType("real");

                    b.Property<int?>("numAbsenceDays")
                        .HasColumnType("int");

                    b.Property<int?>("numAttendanceDays")
                        .HasColumnType("int");

                    b.Property<float?>("numOfDeductHours")
                        .HasColumnType("real");

                    b.Property<float?>("numOfExtraHours")
                        .HasColumnType("real");

                    b.Property<float?>("totalOfDeductionPrice")
                        .HasColumnType("real");

                    b.Property<float?>("totalOfExtraPrice")
                        .HasColumnType("real");

                    b.Property<int?>("year")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("addBy");

                    b.HasIndex("deletedBy");

                    b.HasIndex("editBy");

                    b.HasIndex("empId");

                    b.HasIndex("idmonth");

                    b.ToTable("EmpReports");
                });

            modelBuilder.Entity("HR_Sys.Models.HR", b =>
                {
                    b.Property<int>("hrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("hrId"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("hrUserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("validationId")
                        .HasColumnType("int");

                    b.HasKey("hrId");

                    b.HasIndex("validationId");

                    b.ToTable("HRs");

                    b.HasData(
                        new
                        {
                            hrId = 1,
                            email = "hady20@admin.com",
                            fullName = "admin admin",
                            hrUserName = "admin20",
                            password = "admin@1234",
                            validationId = 1
                        });
                });

            modelBuilder.Entity("HR_Sys.Models.Months", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("addBy")
                        .HasColumnType("int");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("int");

                    b.Property<int?>("editBy")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("lastEdit")
                        .HasColumnType("bit");

                    b.Property<string>("nameMonth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("addBy");

                    b.HasIndex("deletedBy");

                    b.HasIndex("editBy");

                    b.ToTable("Months");

                    b.HasData(
                        new
                        {
                            id = 1,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameMonth = "يناير"
                        },
                        new
                        {
                            id = 2,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameMonth = "فبراير"
                        },
                        new
                        {
                            id = 3,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameMonth = "مارس"
                        },
                        new
                        {
                            id = 4,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameMonth = "ابريل"
                        },
                        new
                        {
                            id = 5,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameMonth = "مايو"
                        },
                        new
                        {
                            id = 6,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameMonth = "يونيو"
                        },
                        new
                        {
                            id = 7,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameMonth = "يوليو"
                        },
                        new
                        {
                            id = 8,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameMonth = "اغسطس"
                        },
                        new
                        {
                            id = 9,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameMonth = "سبتمبر"
                        },
                        new
                        {
                            id = 10,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameMonth = "اكتوبر"
                        },
                        new
                        {
                            id = 11,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameMonth = "نوفمبر"
                        },
                        new
                        {
                            id = 12,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameMonth = "ديسمبر"
                        });
                });

            modelBuilder.Entity("HR_Sys.Models.NameAnnualHoliday", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("addBy")
                        .HasColumnType("int");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("int");

                    b.Property<int?>("editBy")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("lastEdit")
                        .HasColumnType("bit");

                    b.Property<string>("nameHoliday")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("addBy");

                    b.HasIndex("deletedBy");

                    b.HasIndex("editBy");

                    b.ToTable("NameAnnualHolidays");

                    b.HasData(
                        new
                        {
                            id = 1,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameHoliday = "عيد الغطاس"
                        },
                        new
                        {
                            id = 2,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameHoliday = "عيد الاضحي"
                        },
                        new
                        {
                            id = 3,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameHoliday = "عيد الفطر"
                        },
                        new
                        {
                            id = 4,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameHoliday = "عيد العمال"
                        },
                        new
                        {
                            id = 5,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nameHoliday = "عيد تحرير سيناء"
                        });
                });

            modelBuilder.Entity("HR_Sys.Models.Nationality", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("addBy")
                        .HasColumnType("int");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("int");

                    b.Property<int?>("editBy")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("lastEdit")
                        .HasColumnType("bit");

                    b.Property<string>("nationalityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("addBy");

                    b.HasIndex("deletedBy");

                    b.HasIndex("editBy");

                    b.ToTable("Nationalities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nationalityName = "Egypt"
                        },
                        new
                        {
                            id = 2,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nationalityName = "England"
                        },
                        new
                        {
                            id = 3,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nationalityName = "France"
                        },
                        new
                        {
                            id = 4,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nationalityName = "Germany"
                        },
                        new
                        {
                            id = 5,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nationalityName = "Oman"
                        },
                        new
                        {
                            id = 6,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nationalityName = "Morocco"
                        },
                        new
                        {
                            id = 7,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nationalityName = "Saudi Arabia"
                        },
                        new
                        {
                            id = 8,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nationalityName = "Sudan"
                        },
                        new
                        {
                            id = 9,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nationalityName = "September"
                        },
                        new
                        {
                            id = 10,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nationalityName = "The United Arab Emirates"
                        },
                        new
                        {
                            id = 11,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nationalityName = "Libya"
                        },
                        new
                        {
                            id = 12,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            nationalityName = "Jordan"
                        });
                });

            modelBuilder.Entity("HR_Sys.Models.TypesOfVacationsEmp", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("addBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("int");

                    b.Property<int?>("editBy")
                        .HasColumnType("int");

                    b.Property<int>("empId")
                        .HasColumnType("int");

                    b.Property<int>("idDays")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("lastEdit")
                        .HasColumnType("bit");

                    b.Property<int>("vacId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("addBy");

                    b.HasIndex("deletedBy");

                    b.HasIndex("editBy");

                    b.HasIndex("empId");

                    b.HasIndex("idDays");

                    b.HasIndex("vacId");

                    b.ToTable("TypesOfVacationsEmps");

                    b.HasData(
                        new
                        {
                            id = 1,
                            addBy = 1,
                            empId = 1,
                            idDays = 1,
                            isDeleted = false,
                            lastEdit = true,
                            vacId = 1
                        },
                        new
                        {
                            id = 2,
                            addBy = 1,
                            empId = 1,
                            idDays = 7,
                            isDeleted = false,
                            lastEdit = true,
                            vacId = 1
                        });
                });

            modelBuilder.Entity("HR_Sys.Models.VacationType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("addBy")
                        .HasColumnType("int");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("int");

                    b.Property<int?>("editBy")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("lastEdit")
                        .HasColumnType("bit");

                    b.Property<string>("vacationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("addBy");

                    b.HasIndex("deletedBy");

                    b.HasIndex("editBy");

                    b.ToTable("VacationTypes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            vacationName = "اجازة اسبوعية"
                        },
                        new
                        {
                            id = 2,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            vacationName = "اجازة عارضة"
                        },
                        new
                        {
                            id = 3,
                            addBy = 1,
                            isDeleted = false,
                            lastEdit = true,
                            vacationName = "اجازة سنوية"
                        });
                });

            modelBuilder.Entity("HR_Sys.Models.Validations", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("attendAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("attendDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("attendDisplay")
                        .HasColumnType("bit");

                    b.Property<bool>("attendEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("empAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("empDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("empDisplay")
                        .HasColumnType("bit");

                    b.Property<bool>("empEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("gsAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("gsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("gsDisplay")
                        .HasColumnType("bit");

                    b.Property<bool>("gsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("reportAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("reportDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("reportDisplay")
                        .HasColumnType("bit");

                    b.Property<bool>("reportEdit")
                        .HasColumnType("bit");

                    b.Property<string>("validationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Validations");

                    b.HasData(
                        new
                        {
                            id = 1,
                            attendAdd = true,
                            attendDelete = true,
                            attendDisplay = true,
                            attendEdit = true,
                            empAdd = true,
                            empDelete = true,
                            empDisplay = true,
                            empEdit = true,
                            gsAdd = true,
                            gsDelete = true,
                            gsDisplay = true,
                            gsEdit = true,
                            reportAdd = true,
                            reportDelete = true,
                            reportDisplay = true,
                            reportEdit = true,
                            validationName = "Admin"
                        });
                });

            modelBuilder.Entity("HR_Sys.Models.annualHoliday", b =>
                {
                    b.HasOne("HR_Sys.Models.HR", "Add")
                        .WithMany()
                        .HasForeignKey("addBy");

                    b.HasOne("HR_Sys.Models.HR", "Delete")
                        .WithMany()
                        .HasForeignKey("deletedBy");

                    b.HasOne("HR_Sys.Models.HR", "edit")
                        .WithMany()
                        .HasForeignKey("editBy");

                    b.HasOne("HR_Sys.Models.NameAnnualHoliday", "NameAnnualHoliday")
                        .WithMany("AnnualHolidays")
                        .HasForeignKey("idHoliday")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Add");

                    b.Navigation("Delete");

                    b.Navigation("NameAnnualHoliday");

                    b.Navigation("edit");
                });

            modelBuilder.Entity("HR_Sys.Models.Days", b =>
                {
                    b.HasOne("HR_Sys.Models.HR", "Add")
                        .WithMany()
                        .HasForeignKey("addBy");

                    b.HasOne("HR_Sys.Models.HR", "Delete")
                        .WithMany()
                        .HasForeignKey("deletedBy");

                    b.HasOne("HR_Sys.Models.HR", "edit")
                        .WithMany()
                        .HasForeignKey("editBy");

                    b.Navigation("Add");

                    b.Navigation("Delete");

                    b.Navigation("edit");
                });

            modelBuilder.Entity("HR_Sys.Models.Department", b =>
                {
                    b.HasOne("HR_Sys.Models.HR", "Add")
                        .WithMany("DepartmentsAdd")
                        .HasForeignKey("addBy");

                    b.HasOne("HR_Sys.Models.HR", "Delete")
                        .WithMany("DepartmentsDelete")
                        .HasForeignKey("deletedBy");

                    b.HasOne("HR_Sys.Models.HR", "edit")
                        .WithMany("DepartmentsEdit")
                        .HasForeignKey("editBy");

                    b.Navigation("Add");

                    b.Navigation("Delete");

                    b.Navigation("edit");
                });

            modelBuilder.Entity("HR_Sys.Models.Employee", b =>
                {
                    b.HasOne("HR_Sys.Models.HR", "Add")
                        .WithMany("EmployeesAdd")
                        .HasForeignKey("addBy");

                    b.HasOne("HR_Sys.Models.HR", "Delete")
                        .WithMany("EmployeesDelete")
                        .HasForeignKey("deletedBy");

                    b.HasOne("HR_Sys.Models.Department", "Department")
                        .WithMany("employees")
                        .HasForeignKey("deptid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR_Sys.Models.HR", "edit")
                        .WithMany("EmployeesEdit")
                        .HasForeignKey("editBy");

                    b.HasOne("HR_Sys.Models.Nationality", "Nationality")
                        .WithMany("Employees")
                        .HasForeignKey("nationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Add");

                    b.Navigation("Delete");

                    b.Navigation("Department");

                    b.Navigation("Nationality");

                    b.Navigation("edit");
                });

            modelBuilder.Entity("HR_Sys.Models.EmployeeAttendance", b =>
                {
                    b.HasOne("HR_Sys.Models.HR", "Add")
                        .WithMany("General_Settings")
                        .HasForeignKey("addBy");

                    b.HasOne("HR_Sys.Models.HR", "Delete")
                        .WithMany("General_SettingsDelete")
                        .HasForeignKey("deletedBy");

                    b.HasOne("HR_Sys.Models.HR", "edit")
                        .WithMany("General_SettingsEdit")
                        .HasForeignKey("editBy");

                    b.HasOne("HR_Sys.Models.Employee", "Employee")
                        .WithMany("GeneralSettings")
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Add");

                    b.Navigation("Delete");

                    b.Navigation("Employee");

                    b.Navigation("edit");
                });

            modelBuilder.Entity("HR_Sys.Models.EmpReport", b =>
                {
                    b.HasOne("HR_Sys.Models.HR", "Add")
                        .WithMany("Emp_ReportsAdd")
                        .HasForeignKey("addBy");

                    b.HasOne("HR_Sys.Models.HR", "Delete")
                        .WithMany("Emp_ReportsDelete")
                        .HasForeignKey("deletedBy");

                    b.HasOne("HR_Sys.Models.HR", "edit")
                        .WithMany("Emp_ReportsEdit")
                        .HasForeignKey("editBy");

                    b.HasOne("HR_Sys.Models.Employee", "Employees")
                        .WithMany("EmpReports")
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR_Sys.Models.Months", "Months")
                        .WithMany("EmpReports")
                        .HasForeignKey("idmonth")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Add");

                    b.Navigation("Delete");

                    b.Navigation("Employees");

                    b.Navigation("Months");

                    b.Navigation("edit");
                });

            modelBuilder.Entity("HR_Sys.Models.HR", b =>
                {
                    b.HasOne("HR_Sys.Models.Validations", "Valids")
                        .WithMany("HRs")
                        .HasForeignKey("validationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Valids");
                });

            modelBuilder.Entity("HR_Sys.Models.Months", b =>
                {
                    b.HasOne("HR_Sys.Models.HR", "Add")
                        .WithMany("Months")
                        .HasForeignKey("addBy");

                    b.HasOne("HR_Sys.Models.HR", "Delete")
                        .WithMany("MonthsDelete")
                        .HasForeignKey("deletedBy");

                    b.HasOne("HR_Sys.Models.HR", "edit")
                        .WithMany("MonthsEdit")
                        .HasForeignKey("editBy");

                    b.Navigation("Add");

                    b.Navigation("Delete");

                    b.Navigation("edit");
                });

            modelBuilder.Entity("HR_Sys.Models.NameAnnualHoliday", b =>
                {
                    b.HasOne("HR_Sys.Models.HR", "Add")
                        .WithMany()
                        .HasForeignKey("addBy");

                    b.HasOne("HR_Sys.Models.HR", "Delete")
                        .WithMany()
                        .HasForeignKey("deletedBy");

                    b.HasOne("HR_Sys.Models.HR", "edit")
                        .WithMany()
                        .HasForeignKey("editBy");

                    b.Navigation("Add");

                    b.Navigation("Delete");

                    b.Navigation("edit");
                });

            modelBuilder.Entity("HR_Sys.Models.Nationality", b =>
                {
                    b.HasOne("HR_Sys.Models.HR", "Add")
                        .WithMany("NationalitiesAdd")
                        .HasForeignKey("addBy");

                    b.HasOne("HR_Sys.Models.HR", "Delete")
                        .WithMany("NationalitiesDelete")
                        .HasForeignKey("deletedBy");

                    b.HasOne("HR_Sys.Models.HR", "edit")
                        .WithMany("NationalitiesEdit")
                        .HasForeignKey("editBy");

                    b.Navigation("Add");

                    b.Navigation("Delete");

                    b.Navigation("edit");
                });

            modelBuilder.Entity("HR_Sys.Models.TypesOfVacationsEmp", b =>
                {
                    b.HasOne("HR_Sys.Models.HR", "Add")
                        .WithMany("TypesOfVacationsEmps")
                        .HasForeignKey("addBy");

                    b.HasOne("HR_Sys.Models.HR", "Delete")
                        .WithMany("TypesOfVacationsEmpsDelete")
                        .HasForeignKey("deletedBy");

                    b.HasOne("HR_Sys.Models.HR", "edit")
                        .WithMany("TypesOfVacationsEmpsEdit")
                        .HasForeignKey("editBy");

                    b.HasOne("HR_Sys.Models.Employee", "emp")
                        .WithMany("TypesOfVacationsEmps")
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR_Sys.Models.Days", "days")
                        .WithMany("TypesOfVacationsEmps")
                        .HasForeignKey("idDays")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR_Sys.Models.VacationType", "VacationType")
                        .WithMany("TypesOfVacationsEmps")
                        .HasForeignKey("vacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Add");

                    b.Navigation("Delete");

                    b.Navigation("VacationType");

                    b.Navigation("days");

                    b.Navigation("edit");

                    b.Navigation("emp");
                });

            modelBuilder.Entity("HR_Sys.Models.VacationType", b =>
                {
                    b.HasOne("HR_Sys.Models.HR", "Add")
                        .WithMany("VacationTypes")
                        .HasForeignKey("addBy");

                    b.HasOne("HR_Sys.Models.HR", "Delete")
                        .WithMany("VacatioTypesDelete")
                        .HasForeignKey("deletedBy");

                    b.HasOne("HR_Sys.Models.HR", "edit")
                        .WithMany("VacatioTypesEdit")
                        .HasForeignKey("editBy");

                    b.Navigation("Add");

                    b.Navigation("Delete");

                    b.Navigation("edit");
                });

            modelBuilder.Entity("HR_Sys.Models.Days", b =>
                {
                    b.Navigation("TypesOfVacationsEmps");
                });

            modelBuilder.Entity("HR_Sys.Models.Department", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("HR_Sys.Models.Employee", b =>
                {
                    b.Navigation("EmpReports");

                    b.Navigation("GeneralSettings");

                    b.Navigation("TypesOfVacationsEmps");
                });

            modelBuilder.Entity("HR_Sys.Models.HR", b =>
                {
                    b.Navigation("DepartmentsAdd");

                    b.Navigation("DepartmentsDelete");

                    b.Navigation("DepartmentsEdit");

                    b.Navigation("Emp_ReportsAdd");

                    b.Navigation("Emp_ReportsDelete");

                    b.Navigation("Emp_ReportsEdit");

                    b.Navigation("EmployeesAdd");

                    b.Navigation("EmployeesDelete");

                    b.Navigation("EmployeesEdit");

                    b.Navigation("General_Settings");

                    b.Navigation("General_SettingsDelete");

                    b.Navigation("General_SettingsEdit");

                    b.Navigation("Months");

                    b.Navigation("MonthsDelete");

                    b.Navigation("MonthsEdit");

                    b.Navigation("NationalitiesAdd");

                    b.Navigation("NationalitiesDelete");

                    b.Navigation("NationalitiesEdit");

                    b.Navigation("TypesOfVacationsEmps");

                    b.Navigation("TypesOfVacationsEmpsDelete");

                    b.Navigation("TypesOfVacationsEmpsEdit");

                    b.Navigation("VacatioTypesDelete");

                    b.Navigation("VacatioTypesEdit");

                    b.Navigation("VacationTypes");
                });

            modelBuilder.Entity("HR_Sys.Models.Months", b =>
                {
                    b.Navigation("EmpReports");
                });

            modelBuilder.Entity("HR_Sys.Models.NameAnnualHoliday", b =>
                {
                    b.Navigation("AnnualHolidays");
                });

            modelBuilder.Entity("HR_Sys.Models.Nationality", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HR_Sys.Models.VacationType", b =>
                {
                    b.Navigation("TypesOfVacationsEmps");
                });

            modelBuilder.Entity("HR_Sys.Models.Validations", b =>
                {
                    b.Navigation("HRs");
                });
#pragma warning restore 612, 618
        }
    }
}
